保存数据：将应用更新的大小减少65％
作者：Andrew Hayden，Google Play软件工程师

Android用户正在Google Play上下载数以百亿计的应用和游戏。我们也看到开发人员频繁更新应用程式，以便为使用者提供精彩内容，提高安全性，并提升整体使用者体验。它需要大量的数据来下载这些更新，我们知道用户关心他们的设备使用了多少数据。今年早些时候，我们宣布我们开始使用bsdiff算法 （由Colin Percival）。使用bsdiff，与完整的APK大小相比，我们能够将应用更新的大小平均减少47％。

今天，我们很高兴分享一种新的方法，进一步 - 逐个文件修补。 使用逐个文件修补的应用更新平均 比完整应用小65％，在某些情况下小于90％。

与我们之前的方法相比，节省了每天可节省6 PB的用户数据。

为了获得应用程序的新版本，谷歌播放将您的设备描述了一个补丁差异新旧版本的应用程序之间。

想象一下，你是一本有关被发表的书的作者，并希望改变一个句子 - 更容易告诉编辑哪个句子要改变，什么改变，而不是发送一本全新的书。同样，补丁比整个APK要小得多，下载速度也快。

逐文件修补中使用的技术

Android应用程序打包为APK，这是具有特殊约定的ZIP文件。ZIP文件（和APK）中的大部分内容使用名为Deflate的技术压缩。Deflate真的很好地压缩数据，但它有一个缺点：它使识别原始（未压缩）内容的变化真的很难。即使是对原始内容的一个微小的改变（例如改变一个单词在一本书）可以使压缩的输出deflate看起来完全不同。描述原始内容之间的差异很容易，但是描述压缩内容之间的差异是如此困难，导致低效的补丁。

观看右侧压缩文本与左侧未压缩文本中单字母更改的差异：


逐文件文件因此基于检测未压缩数据中的改变。为了生成一个补丁，我们首先在计算delta之前先解压旧文件和新文件（我们仍然在这里使用bsdiff）。然后，应用补丁，我们解压缩旧文件，将增量应用于未压缩的内容，然后重新压缩新文件。在这种情况下，我们需要确保您的设备上的APK是一个完美匹配，字节为字节，到Play Store（请参阅APK Signature Schema v2为什么）。

当重新压缩新文件时，我们打了两个并发症。首先，Deflate有一些影响输出的设置; 并且我们不知道首先使用哪些设置。第二，存在许多版本的缩写，我们需要知道您的设备上的版本是否合适。

幸运的是，在分析了Play商店上的应用之后，我们发现最近和兼容版本的基于zlib（最流行的deflate库）的deflate几乎占据了Play商店中所有瘪的内容。此外，默认设置（level = 6）和最大压缩设置（level = 9）是我们在实践中遇到的唯一设置。

知道这一点，我们可以检测和再现原始的放气设置。这使得可以解压缩数据，应用修补程序，然后将数据重新压缩回与最初上传的完全相同的字节。

然而，有一个权衡; 在设备上需要额外的处理能力。在现代设备（例如从2015年），重新压缩可以花费一点点每兆字节，而在较旧或较不强大的设备，它可以更长。到目前为止的分析显示，平均来说，如果补丁大小减半，那么应用补丁（对于逐文件包括重新压缩）花费的时间加倍。

现在，我们将这种新的修补技术的使用限制为仅自动更新，即在后台进行的更新，通常在晚上，当您的手机插入电源，你不可能使用它。这可以确保用户不必再像以往那样等待更新完成时手动更新应用程序。

逐个文件修补的有效性？

以下是已使用逐个文件修补的应用更新示例：





免责声明：如果您手动按“更新”时看到不同的补丁大小，那是因为我们目前不使用逐个文件进行交互式更新，只有在后台执行。
保存数据并使我们的用户（和开发人员）快乐

这些更改旨在确保我们的超过10亿Android用户的社区使用尽可能少的数据为常规的应用程序更新。最好的事情是，作为一个开发人员，你不需要做任何事情。您可以免费获得这些减少到您的更新大小！

如果您想了解有关逐个文件修补的详细信息（包括技术详细信息），请转到Archive Patcher GitHub项目，您可以在其中找到信息（包括源代码）。是的，逐个文件修补是完全开源的！

作为开发者，如果您对进一步降低APK大小感兴趣，请参阅以下有关减少APK大小的一般提示。
